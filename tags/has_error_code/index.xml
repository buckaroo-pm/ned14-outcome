<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Has_error_code on Outcome documentation</title>
    <link>https://ned14.github.io/outcome/tags/has_error_code/</link>
    <description>Recent content in Has_error_code on Outcome documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 28 Oct 2018 00:29:27 +0200</lastBuildDate>
    
	<atom:link href="https://ned14.github.io/outcome/tags/has_error_code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Custom payloads</title>
      <link>https://ned14.github.io/outcome/tutorial/payload/</link>
      <pubDate>Sun, 28 Oct 2018 00:29:27 +0200</pubDate>
      
      <guid>https://ned14.github.io/outcome/tutorial/payload/</guid>
      <description>So far in this tutorial, type EC in result&amp;lt;T, EC&amp;gt; has always been a std::error_code (though it can be of any type you wish instead). EC needs in fact to merely satisfy API NOT FOUND IN DOCS success_failure/#standardese-outcome_v2_xxx__trait__has_error_code-T- for EC to be treated as if an std::error_code.
In turn, trait::has_error_code_v&amp;lt;EC&amp;gt; is true if there exists some ADL discovered free function:
 make_error_code(EC) returning a std::error_code. make_error_code(get&amp;lt;0&amp;gt;(EC)) returning a std::error_code (i.e. EC might be pair&amp;lt;std::error_code, U&amp;gt; or tuple&amp;lt;std::error_code, .</description>
    </item>
    
  </channel>
</rss>