<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tagged Constructors on Outcome documentation</title>
    <link>https://ned14.github.io/outcome/categories/tagged-constructors/</link>
    <description>Recent content in Tagged Constructors on Outcome documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://ned14.github.io/outcome/categories/tagged-constructors/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>`basic_result(const failure_type&lt;T&gt; &amp;)`</title>
      <link>https://ned14.github.io/outcome/reference/types/basic_result/implicit_failure_copy_constructor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ned14.github.io/outcome/reference/types/basic_result/implicit_failure_copy_constructor/</guid>
      <description>Implicit error-from-failure-type-sugar copy constructor used to disambiguate the construction of the error type. Note that if T = void, error_type will be default constructed. Calls API NOT FOUND IN DOCS hook_result_copy_construction(basic_result&amp;lt;T, E, NoValuePolicy&amp;gt; *, U &amp;amp;&amp;amp;) with this and const failure_type&amp;lt;T&amp;gt; &amp;amp;.
Requires: predicate::enable_compatible_conversion&amp;lt;void, T, void&amp;gt; is true, or T is void.
Complexity: Same as for the error_type constructor which accepts T, or the error_type default constructor if T is void.</description>
    </item>
    
    <item>
      <title>`basic_result(const success_type&lt;T&gt; &amp;)`</title>
      <link>https://ned14.github.io/outcome/reference/types/basic_result/implicit_success_copy_constructor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ned14.github.io/outcome/reference/types/basic_result/implicit_success_copy_constructor/</guid>
      <description>Implicit value-from-success-type-sugar copy constructor used to disambiguate the construction of the value type. Note that if T = void, value_type will be default constructed. Calls API NOT FOUND IN DOCS hook_result_copy_construction(basic_result&amp;lt;T, E, NoValuePolicy&amp;gt; *, U &amp;amp;&amp;amp;) with this and const success_type&amp;lt;T&amp;gt; &amp;amp;.
Requires: predicate::enable_compatible_conversion&amp;lt;T, void, void&amp;gt; is true, or T is void.
Complexity: Same as for the value_type constructor which accepts T, or the value_type default constructor if T is void.</description>
    </item>
    
    <item>
      <title>`basic_result(failure_type&lt;T&gt; &amp;&amp;)`</title>
      <link>https://ned14.github.io/outcome/reference/types/basic_result/implicit_failure_move_constructor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ned14.github.io/outcome/reference/types/basic_result/implicit_failure_move_constructor/</guid>
      <description>Implicit error-from-failure-type-sugar move constructor used to disambiguate the construction of the error type. Note that if T = void, error_type will be default constructed. Calls API NOT FOUND IN DOCS hook_result_move_construction(basic_result&amp;lt;T, E, NoValuePolicy&amp;gt; *, U &amp;amp;&amp;amp;) with this and failure_type&amp;lt;T&amp;gt; &amp;amp;&amp;amp;.
Requires: predicate::enable_compatible_conversion&amp;lt;void, T, void&amp;gt; is true, or T is void.
Complexity: Same as for the error_type constructor which accepts T, or the error_type default constructor if T is void. Constexpr, triviality and noexcept of underlying operations is propagated.</description>
    </item>
    
    <item>
      <title>`basic_result(success_type&lt;T&gt; &amp;&amp;)`</title>
      <link>https://ned14.github.io/outcome/reference/types/basic_result/implicit_success_move_constructor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ned14.github.io/outcome/reference/types/basic_result/implicit_success_move_constructor/</guid>
      <description>Implicit value-from-success-type-sugar move constructor used to disambiguate the construction of the value type. Note that if T = void, value_type will be default constructed. Calls API NOT FOUND IN DOCS hook_result_move_construction(basic_result&amp;lt;T, E, NoValuePolicy&amp;gt; *, U &amp;amp;&amp;amp;) with this and success_type&amp;lt;T&amp;gt; &amp;amp;&amp;amp;.
Requires: predicate::enable_compatible_conversion&amp;lt;T, void, void&amp;gt; is true, or T is void.
Complexity: Same as for the value_type constructor which accepts T, or the value_type default constructor if T is void. Constexpr, triviality and noexcept of underlying operations is propagated.</description>
    </item>
    
  </channel>
</rss>